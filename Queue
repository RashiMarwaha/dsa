#include <bits/stdc++.h>
using namespace std;
class Queue {
private:
    int items[5], front, rear;

public:
    Queue() {
        front = -1;
        rear = -1;
    }
    bool isFull() {
        if (front == 0 && rear == 5 - 1) {
            return true;
        }
        return false;
    }
    bool isEmpty() {
        if (front == -1)
            return true;
        return false;
    }
    void enqueue(int element) {
        if (isFull()) {
            cout << "Queue is full" << endl;
        } else {
            if (front == -1) front = 0; 
            rear++;
            items[rear] = element;
            cout << "Inserted " << element << endl;
        }
    }

    int dequeue() {
        int element;
        if (isEmpty()) {
            cout << "Queue is empty" << endl;
            return (-1);
        } else {
            element = items[front];
            if (front >= rear) { 
                front = -1;
                rear = -1;
            } else {
                front++;
            }
            cout << "Deleted " << element << endl;
            return (element);
        }
    }
    void display() {
        if (isEmpty()) {
            cout << "Queue is empty" << endl;
        } else {
            cout << "Front index: " << front << endl;
            cout << "Items: ";
            for (int i = front; i <= rear; i++)
                cout << items[i] << "  ";
            cout << endl;
            cout << "Rear index: " << rear << endl;
        }
    }
};

int main() {
    Queue q;

    q.enqueue(1);
    q.enqueue(2);
    q.enqueue(3);
    q.enqueue(4);
    q.enqueue(5);
    q.enqueue(6);
    q.display();
    q.dequeue();
    q.dequeue();

    // Display queue after dequeue
    q.display();

    return 0;
}
